/* 
================================================
CLEANING THE DATA and TRANSFORMATION OF THE DATA 
================================================
*/

---------------------
--MAIN FULL FIX QUERY
---------------------

INSERT INTO silver.crm_cust_info (
	cst_id,
	cst_key,
	cst_firstname,
	cst_lastname,
	cst_marital_status,
	cst_gndr,
	cst_create_date)
SELECT 
	cst_id,
	cst_key,
	TRIM(cst_firstname) AS cst_firstname,
	TRIM(cst_lastname) AS cst_lastname,
	CASE WHEN UPPER(TRIM(cst_material_status)) = 'S' THEN 'Single'
		WHEN UPPER(TRIM(cst_material_status)) = 'M' THEN 'Married'
		ELSE 'n/a'
		END cst_material_status,
	CASE WHEN UPPER(TRIM(cst_gndr)) = 'F' THEN 'Female'
		WHEN UPPER(TRIM(cst_gndr)) = 'M' THEN 'Male'
		ELSE 'n/a'
		END cst_gndr,
	cst_create_date
FROM
	(SELECT *, ROW_NUMBER() OVER(PARTITION BY cst_id ORDER BY cst_create_date DESC) AS flaglast
	FROM bronze.crm_cust_info
	WHERE cst_id IS NOT NULL)t
WHERE flaglast = 1


SELECT * 
FROM silver.crm_cust_info\

--===================================================================
--===================================================================
-- 1.FIX NULLS OR DUPLICATES IN PRIMARY KEY
-- [REMOVE DUPLICATES]~ Ensure only one record per entity by identifying and retaining the most relavant and important row of data
-- [HANFDING MISSING DATA]~ Fill in the blacks by adding a certian default values
-- EXPECTAION NO RESULTS
	--CHECK
		SELECT cst_id, COUNT(*)
		FROM bronze.crm_cust_info
		GROUP BY cst_id
		HAVING COUNT(*) > 1
	--FIX
		SELECT *
		FROM
			(SELECT 
				*, ROW_NUMBER() OVER(PARTITION BY cst_id ORDER BY cst_create_date DESC) AS flaglast
			FROM bronze.crm_cust_info
			WHERE cst_id IS NOT NULL) t
		WHERE flaglast = 1

-- 2.Check for Unwanted spaces in the STRING values
-- [REMOVE UNWANTED SPACES/TRIMMING]~ Removes unnessary spaces in text values to ensure data consistency and uniformality across all records
-- EXPECTAION NO RESULTS
	--CHECK
		SELECT cst_firstname
		FROM bronze.crm_cust_info
		WHERE cst_firstname != TRIM(cst_firstname)
	--FIX
		SELECT
			cst_id,
			cst_key,
			TRIM(cst_firstname) AS cst_firstname,
			TRIM(cst_lastname) AS cst_lastname,
			cst_material_status,
			cst_gndr,
			cst_create_date
		FROM bronze.crm_cust_info

-- 3. CHECK consistency of low cardinality columns [gender, marital status]
-- [DATA NORMALIZATION/DATA STANDARDIZATION]~Map coded values to meaningful, user friendly descriptions
-- [HANDLING MISSING DATA]~ Fill in the blacks by adding a certian default values
	-- CHECK
		SELECT DISTINCT cst_gndr
		FROM bronze.crm_cust_info
	-- FIX
		SELECT 
			cst_gndr,
			CASE WHEN UPPER(TRIM(cst_gndr)) = 'F' THEN 'Female'
			WHEN UPPER(TRIM(cst_gndr)) = 'M' THEN 'Male'
			ELSE 'n/a'
			END cst_gndr
		FROM bronze.crm_cust_info
	-- CHECK
		SELECT DISTINCT cst_material_status
		FROM bronze.crm_cust_info
	-- FIX
		SELECT
			*,
			CASE WHEN UPPER(TRIM(cst_material_status)) = 'S' THEN 'Single'
			WHEN UPPER(TRIM(cst_material_status)) = 'M' THEN 'Married'
			ELSE 'n/a'
			END cst_material_status
		FROM bronze.crm_cust_info;

-- 4 CHECK the data type of number columns date columns etc
 
--===================================================================
--===================================================================
